version: "3.8"

services:
  # üóÑÔ∏è PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pricepulse-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pricepulse}
      POSTGRES_USER: ${POSTGRES_USER:-pricepulse}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpassword123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/migrations:/docker-entrypoint-initdb.d
    networks:
      - pricepulse-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pricepulse -d pricepulse"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üß™ Test Database
  postgres-test:
    image: postgres:15-alpine
    container_name: pricepulse-postgres-test
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_TEST_DB:-pricepulse_test}
      POSTGRES_USER: ${POSTGRES_USER:-pricepulse}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpassword123}
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - pricepulse-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pricepulse -d pricepulse_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üî¥ Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pricepulse-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-devpassword123} --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pricepulse-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üé® Frontend Development Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: pricepulse-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Anonymous volume for node_modules
    networks:
      - pricepulse-network
    environment:
      - VITE_API_BASE_URL=http://backend:3001/api
      - VITE_BACKEND_URL=http://backend:3001
      - VITE_WS_URL=ws://backend:3001
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    profiles:
      - dev

  # ‚öôÔ∏è Backend Development Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: pricepulse-backend-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules  # Anonymous volume for node_modules
    networks:
      - pricepulse-network
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=pricepulse
      - DB_PASSWORD=devpassword123
      - DB_NAME=pricepulse
      - REDIS_URL=redis://:devpassword123@redis:6379
      - JWT_SECRET=dev-jwt-secret-key
      - FRONTEND_URL=http://localhost:5173
      - PORT=3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    profiles:
      - dev

  # üîç Type Checker Service
  type-checker:
    build:
      context: .
      dockerfile: Dockerfile.typecheck
    container_name: pricepulse-type-checker
    volumes:
      - ./frontend:/app/frontend
      - ./backend:/app/backend
      - ./package.json:/app/package.json
      - /app/frontend/node_modules
      - /app/backend/node_modules
    networks:
      - pricepulse-network
    profiles:
      - tools

  # üßπ Linter Service
  linter:
    build:
      context: .
      dockerfile: Dockerfile.linter
    container_name: pricepulse-linter
    volumes:
      - ./frontend:/app/frontend
      - ./backend:/app/backend
      - ./package.json:/app/package.json
      - /app/frontend/node_modules
      - /app/backend/node_modules
    networks:
      - pricepulse-network
    profiles:
      - tools

  # üß™ Test Runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: pricepulse-test-runner
    environment:
      - NODE_ENV=test
      - DB_HOST=postgres-test
      - DB_PORT=5432
      - DB_USER=pricepulse
      - DB_PASSWORD=devpassword123
      - DB_NAME=pricepulse_test
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./frontend:/app/frontend
      - ./backend:/app/backend
      - ./package.json:/app/package.json
      - /app/frontend/node_modules
      - /app/backend/node_modules
    networks:
      - pricepulse-network
    depends_on:
      postgres-test:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - tools

  # üõ†Ô∏è Database Admin (PgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pricepulse-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@pricepulse.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - pricepulse-network
    depends_on:
      - postgres
    profiles:
      - admin

  # üìä Redis Admin (RedisInsight)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: pricepulse-redis-insight
    restart: unless-stopped
    ports:
      - "8081:8001"
    volumes:
      - redis_insight_data:/db
    networks:
      - pricepulse-network
    depends_on:
      - redis
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  postgres_test_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_insight_data:
    driver: local

networks:
  pricepulse-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
