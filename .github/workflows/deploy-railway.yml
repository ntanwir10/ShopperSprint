name: Deploy to Railway

on:
  push:
    branches: [ main, coming-soon ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install root dependencies
      run: npm ci

    - name: Install backend dependencies
      run: cd backend && npm ci

    - name: Install frontend dependencies
      run: cd frontend && npm ci

    - name: Run backend tests
      run: cd backend && npm run test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
        REDIS_URL: redis://localhost:6379
        NODE_ENV: test
        JWT_SECRET: test-secret

    - name: Run frontend tests
      run: cd frontend && npm run test

    - name: Build backend
      run: cd backend && npm run build

    - name: Build frontend
      run: cd frontend && npm run build

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/coming-soon')
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.railway
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/coming-soon')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Railway CLI
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        echo "$HOME/.railway/bin" >> $GITHUB_PATH

    - name: Deploy to Railway
      run: |
        railway login --token ${{ secrets.RAILWAY_TOKEN }}
        railway up --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Wait for deployment
      run: |
        echo "Waiting for deployment to complete..."
        sleep 30

    - name: Health check
      run: |
        # Get the Railway domain
        DOMAIN=$(railway domain | grep -o 'https://[^[:space:]]*' | head -1)
        echo "Testing deployment at: $DOMAIN"
        
        # Wait for service to be ready
        for i in {1..10}; do
          if curl -f "$DOMAIN/health" > /dev/null 2>&1; then
            echo "✅ Deployment successful! Service is healthy."
            exit 0
          fi
          echo "Waiting for service to be ready... (attempt $i/10)"
          sleep 10
        done
        
        echo "❌ Health check failed after 10 attempts"
        exit 1
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
